{"version":3,"sources":["chat.jsx"],"names":[],"mappings":"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","file":"chat.js","sourcesContent":["/*jshint sub:true*/\n\nfunction ChatClass() {\n  this.url = \"/chat\";\n\n  this.init = function(){\n    console.log('chat init');\n    this.installObservers();\n    var self = this;\n    this.getHistory(function(historyData){\n      console.log(historyData);\n      self.historyData = historyData;\n      self.createReact();\n      self.renderConvo();\n    });\n\t};\n\n  this.createReact = function() {\n    var MatchSidebar = React.createClass({\n      render: function() {\n        return (\n          <div className=\"matchSidebar\">\n            <MatchList data={this.props.data} />\n          </div>\n        )\n      }\n    });\n\n// <img className=\"matchPic\" src={match['person']['photos'][0]['url']}/>\n// <h3 className=\"matchName\">{match['person']}</h3>\n\n    var MatchCell = React.createClass({\n      render: function() {\n        var messageExp = this.props.messaged === 'true' ? this.props['last_three_messages'] : 'no messages yet';\n        function createMessage() { return {\n          __html: messageExp\n        };}\n        return (\n          <div className=\"matchCell row\" match_id={this.props['match_id']} messaged={this.props['messaged']}>\n            <img className=\"col-md-4\" src={this.props['profile']} />\n            <div className=\"col-md-8\">\n              <span className=\"name\">{this.props['name']}</span>\n              <span className=\"lastonline\">last online {this.props['last_online']}</span>\n              <p dangerouslySetInnerHTML={createMessage()} />\n            </div>\n          </div>\n        )\n      }\n    });\n\n    var MatchList = React.createClass({\n      render: function() {\n        var x = 0;\n        var matchNodes = this.props.data.map(function (match){\n          x++;\n          console.log(x);\n\n          var last_three_messages = match['messages'].slice(-3);\n          var messaged = true;\n          if(match['messages'].length === 0) {\n            messaged = false\n          }\n          var last_online = moment(match.last_activity_date).fromNow();\n\n          var messages_only = [];\n          $.each(last_three_messages, function(idx, val){\n            messages_only.push(val['message']);\n          });\n          return (\n            <MatchCell key={match._id}\n              profile={match['person']['photos'][0]['url']}\n              name={match['person']['name']}\n              last_three_messages={messages_only.join('<br />')}\n              messaged={messaged.toString()}\n              last_online={last_online}\n              match_id={match['_id']} />\n          );\n        });\n        return  (\n          <div className=\"matchList\">\n            {matchNodes}\n          </div>\n        )\n      }\n    });\n\n    ReactDOM.render(\n      <MatchList data={this.historyData} />,\n      document.getElementById('match-list')\n    );\n  }\n\n  this.renderConvo = function() {\n    var ConvoBox = React.renderClass({\n      render: function() {\n        return (\n          <div className=\"convoBox\">\n            <ConvoHistoryBox match={this.props.data}/>\n          </div>\n        )\n      }\n    })\n\n    var ConvoHistoryBox = React.renderClass({\n      render: function() {\n        return (\n          <div className=\"convoHistoryBox\"></div>\n        )\n      }\n    });\n\n    var MessageBubble = React.renderClass({\n      render: function() {\n        return (\n          <div className=\"messageBubble\">\n            <div className=\"messageText\">\n              {this.props.message_text}\n            </div>\n          </div>\n        )\n      }\n    })\n\n    var active_match = this.historyData[0]\n    ReactDOM.render(\n      <ConvoBox data={active_match} />,\n      document.getElementById('active-convo')\n    );\n  };\n\n  this.getHistory = function(callback) {\n    console.log('get history');\n    $.ajax({\n        type: \"POST\",\n        url: '/get_history',\n        data: {\n          'days_ago': 6\n        },\n        dataType: 'json',\n        success: function(msg) {\n          callback(msg.results);\n        }\n      });\n  };\n\n\tthis.installObservers = function(){\n\t};\n\n}\n\nvar Chat = new ChatClass();\n\n// MatchList\n//   MatchCell\n"]}