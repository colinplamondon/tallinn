{"version":3,"sources":["../../components/chat/MatchList.jsx"],"names":[],"mappings":";;AAAA,IAAI,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC;;;AAChC,oBAAkB,EAAE,4BAAS,KAAK,EAAE,CAAC,EAAE;AACrC,QAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC;GACnC;AACD,QAAM,EAAE,kBAAW;AACjB,QAAI,YAAY,GAAG,IAAI,CAAC;AACxB,QAAI,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC1D,QAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,KAAK,EAAC;AACnD,UAAI,mBAAmB,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,UAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,UAAG,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AACjC,gBAAQ,GAAG,KAAK,CAAA;OACjB;AACD,UAAI,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,OAAO,EAAE,CAAC;AAC/D,UAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC;;AAE3D,UAAI,aAAa,GAAG,EAAE,CAAC;AACvB,OAAC,CAAC,IAAI,CAAC,mBAAmB,EAAE,UAAS,GAAG,EAAE,GAAG,EAAC;AAC5C,qBAAa,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;OACpC,CAAC,CAAC;AACH,UAAI,gBAAgB,GAAG,EAAE,CAAA;AACzB,UAAI,KAAK,CAAC,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE;AACnD,wBAAgB,GAAG,QAAQ,CAAA;OAC5B;AACD,aACE,oBAAC,SAAS,IAAC,GAAG,EAAE,KAAK,CAAC,GAAG,AAAC;AACxB,eAAO,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,AAAC;AAC7C,YAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,AAAC;AAC9B,2BAAmB,EAAE,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,AAAC;AAClD,gBAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,AAAC;AAC9B,qBAAa,EAAE,aAAa,AAAC;AAC7B,mBAAW,EAAE,WAAW,AAAC;AACzB,gBAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,AAAC;AACvB,aAAK,EAAE,KAAK,AAAC;AACb,qBAAa,EAAE,UAAU,AAAC;AAC1B,wBAAgB,EAAE,gBAAgB,AAAC,GAAG,CACxC;KACH,CAAC,CAAC;AACH,WACE;;QAAK,SAAS,EAAC,oBAAoB;MAChC,UAAU;KACP,CACP;GACF;CACF,CAAC,CAAC","file":"MatchList.js","sourcesContent":["var MatchList = React.createClass({\n  matchChangeHandler: function(match, x) {\n    this.props.setNewConvo({match:x});\n  },\n  render: function() {\n    var currentreact = this;\n    var boundClick = this.matchChangeHandler.bind(null, this);\n    var matchNodes = this.props.data.map(function (match){\n      var last_three_messages = match['messages'].slice(-3);\n      var messaged = true;\n      if(match['messages'].length === 0) {\n        messaged = false\n      }\n      var last_messaged = moment(match.last_activity_date).fromNow();\n      var last_online = moment(match.person.ping_time).fromNow();\n\n      var messages_only = [];\n      $.each(last_three_messages, function(idx, val){\n        messages_only.push(val['message']);\n      });\n      var currently_active = ''\n      if (match._id == currentreact.props.activeConvo._id) {\n        currently_active = 'active'\n      }\n      return (\n        <MatchCell key={match._id}\n          profile={match['person']['photos'][0]['url']}\n          name={match['person']['name']}\n          last_three_messages={messages_only.join('<br />')}\n          messaged={messaged.toString()}\n          last_messaged={last_messaged}\n          last_online={last_online}\n          match_id={match['_id']}\n          match={match}\n          onMatchChange={boundClick}\n          currently_active={currently_active} />\n      );\n    });\n    return  (\n      <div className=\"matchList col-md-4\">\n        {matchNodes}\n      </div>\n    )\n  }\n});\n"]}